<?php

namespace App\Policies;

{model}
use {pathToModel} as User;
use Illuminate\Auth\Access\HandlesAuthorization;

class {namePolicy}
{
    use HandlesAuthorization;

    /**
     * Determine whether the user can view any models.
     *
     * @param User $user
     * @return bool
     */
    public function viewAny(User $user): bool
    {
        return $user->role->hasPermissionTo('{name}Resource.viewAny');
    }

    /**
     * Determine whether the user can view the model.
     *
     * @param User $user
     * @param {name} $model
     * @return bool
     */
    public function view(User $user, {name} $model): bool
    {
        return $user->role->hasPermissionTo('{name}Resource.view');
    }

    /**
     * Determine whether the user can create models.
     *
     * @param User $user
     * @return bool
     */
    public function create(User $user): bool
    {
        return $user->role->hasPermissionTo('{name}Resource.create');
    }

    /**
     * Determine whether the user can update the model.
     *
     * @param User $user
     * @param {name} $model
     * @return bool
     */
    public function update(User $user, {name} $model): bool
    {
        return $user->role->hasPermissionTo('{name}Resource.update');
    }

    /**
     * Determine whether the user can delete the model.
     *
     * @param User  $user
     * @param {name} $model
     * @return bool
     */
    public function delete(User $user, {name} $model): bool
    {
        return $user->role->hasPermissionTo('{name}Resource.delete');
    }

    /**
     * Determine whether the user can restore the model.
     *
     * @param User  $user
     * @param {name} $model
     * @return bool
     */
    public function restore(User $user, {name} $model): bool
    {
        return $user->role->hasPermissionTo('{name}Resource.restore');
    }

    /**
     * Determine whether the user can permanently delete the model.
     *
     * @param User $user
     * @param {name} $model
     * @return bool
     */
    public function forceDelete(User $user, {name} $model): bool
    {
        return $user->role->hasPermissionTo('{name}Resource.forceDelete');
    }

    /**
     * Determine whether the user can mass delete models.
     *
     * @param User $user
     * @return bool
     */
    public function massDelete(User $user): bool
    {
        return $user->role->hasPermissionTo('{name}Resource.massDelete');
    }
}
